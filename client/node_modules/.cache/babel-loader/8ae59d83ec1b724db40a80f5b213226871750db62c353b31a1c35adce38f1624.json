{"ast":null,"code":"var _jsxFileName = \"/Users/varvarakorableva/Desktop/aist/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes, useNavigate, Navigate } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Main from './pages/main';\nimport Equipment from './pages/equipment';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport EquipmentNavigation from './components/Navigation/EquipmentNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isBurgerMenuOpen, setIsBurgerMenuOpen] = React.useState(false);\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  function handleCardClick(card) {\n    setSelectedCard(card.id);\n    console.log('card');\n  }\n  function handleBurgerMenuClick() {\n    setIsBurgerMenuOpen(true);\n    console.log('click');\n  }\n  function handleMenuClick() {\n    setIsMenuOpen(true);\n    console.log('click menu');\n  }\n  function closeAllPopups() {\n    setIsBurgerMenuOpen(false);\n    setIsMenuOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isBurgerMenuCliked: handleBurgerMenuClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/equipment\",\n        element: /*#__PURE__*/_jsxDEV(Equipment, {\n          onCardClick: handleCardClick,\n          isMenuCliked: handleMenuClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainNavigation, {\n      isOpen: isBurgerMenuOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EquipmentNavigation, {\n      isOpen: isMenuOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GYiF8MYjPATz3/ckuVT6ik1H5yE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","useNavigate","Navigate","React","Header","Footer","Main","Equipment","MainNavigation","EquipmentNavigation","jsxDEV","_jsxDEV","App","_s","isBurgerMenuOpen","setIsBurgerMenuOpen","useState","isMenuOpen","setIsMenuOpen","selectedCard","setSelectedCard","handleCardClick","card","id","console","log","handleBurgerMenuClick","handleMenuClick","closeAllPopups","className","children","isBurgerMenuCliked","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","onCardClick","isMenuCliked","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/varvarakorableva/Desktop/aist/client/src/App.js"],"sourcesContent":["import { Route, Routes, useNavigate, Navigate } from 'react-router-dom'\nimport React from 'react'\nimport './App.css'\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport Main from './pages/main'\nimport Equipment from './pages/equipment'\nimport MainNavigation from './components/Navigation/MainNavigation'\nimport EquipmentNavigation from './components/Navigation/EquipmentNavigation'\n\nfunction App() {\n  const [isBurgerMenuOpen, setIsBurgerMenuOpen] = React.useState(false)\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleCardClick(card) {\n    setSelectedCard(card.id);\n    console.log('card')\n  }\n\n  function handleBurgerMenuClick() {\n    setIsBurgerMenuOpen(true)\n    console.log('click')\n  }\n\n  function handleMenuClick() {\n    setIsMenuOpen(true)\n    console.log('click menu')\n  }\n\n  function closeAllPopups() {\n    setIsBurgerMenuOpen(false)\n    setIsMenuOpen(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header\n          isBurgerMenuCliked={handleBurgerMenuClick}\n      />\n\n      <Routes>\n\n          <Route\n              exact path=\"/\"\n              element={\n                <Main/>\n              }\n          />\n\n          <Route\n              path=\"/equipment\"\n              element={\n                <Equipment\n                onCardClick={handleCardClick}\n                isMenuCliked={handleMenuClick}/>\n              }\n          />\n        \n      </Routes>\n      <MainNavigation\n          isOpen={isBurgerMenuOpen}\n          onClose={closeAllPopups} \n      />\n      <EquipmentNavigation\n          isOpen={isMenuOpen}\n          onClose={closeAllPopups} \n      />\n      \n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}